version: "3.8"

services:
  api:
    build:
      dockerfile: Dockerfile
      context: ./api
      # Only build development stage
      target: development
      # Mount our host dir to the docker container
      # Mount api directory (./api) to (:) docker container (/dweb/src/app)
      # Reflect File changes from host to container
    volumes:
      - ./api:/dweb/src/app
      - /dweb/src/app/node_modules/
    # RUN in debug mode: npm run start:debug --> Also start debugger
    # RUN in dev mode: npm run:dev
    command: npm run start:dev
    depends_on:
      - postgres
    environment:
      DATABASE_URL: postgres://user:password@postgres:5432/db
      NODE_ENV: development
      JWT_SECRET: hard_to_guess_secret_123
      PORT: 3000
    ports:
      - 3000:3000
      - 9229:9229

  frontend:
    build:
      dockerfile: Dockerfile
      context: ./
      target: development
    command: npm run start
    volumes:
      - ./frontend:/dweb/frontend/src/app
      - /dweb/frontend/src/app/node_modules
    ports:
      - 4200:4200
    links:
      - api

  postgres:
    image: postgres:14.5
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: db
    ports:
      - 35000:5432

  postgres_admin:
    image: dpage/pgadmin4:4.30
    depends_on:
      - postgres
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: password
    ports:
      - 5050:80

  nginx:
    image: nginx:alpine
    ports:
      - 80:80
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - api
      - frontend
