name: Deploy to Amazon ECS

on:
  push:
    branches:
      - master

env:
  AWS_REGION: us-west-2
  ECR_REPOSITORY: nestjs-ecs-cluster/chat-app
  ECS_SERVICE: tps-chat-app-td
  ECS_CLUSTER: nestjs-ecs-cluster
  ECS_TASK_DEFINITION: .aws/tps-chat-app-td.json
  CONTAINER_NAME: tps-container

jobs:
  build_and_deploy:
    name: Build and Deploy to ECS
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR Public
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public
          mask-password: true
          skip-logout: false
        env:
          AWS_REGION: us-east-1  # Must be us-east-1 for public ECR
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Build, tag, and push Docker image to Amazon ECR Public
        env:
          ECR_REGISTRY: public.ecr.aws/t0t4t7i2
          ECR_REPOSITORY: nestjs-ecs-cluster/chat-app
          IMAGE_TAG: ${{ github.sha }}
          AWS_REGION: us-west-2  # application deployment region
        run: |
          # Build with ECR tag
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG \
            --build-arg NODE_ENV=development \
            --build-arg JWT_SECRET=${{ secrets.JWT_SECRET }} \
            --build-arg DATABASE_URL=${{ secrets.DATABASE_URL }} \
            --build-arg PORT=3000 \
            ./api
          
          # Push to ECR Public
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true